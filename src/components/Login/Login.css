.volunteer-logo {
    height: 60px;
}

.login-area {
    margin: auto;
    padding: 5%;
    border: 2px solid #ABABAB;
    background: rgb(255, 255, 255);
    border-radius: 5px;
}

.login-form input{
    margin-top: 10px;
    padding: 0;
    border-left: none;
    border-right: none;
    border-top: none;
    border-radius: 0;
}

.login-form input:focus{
    box-shadow: none;
}

.sign-btn {
    font-weight: 500;
    width: 100%;
    border: 1px solid #ABABAB;
    border-radius: 30px;
    text-align: center;
}

.googleIcon {
    height: 35px;
    margin-right: 20px;
}


/* RESPONSIVE-AREA */

@media only screen and (max-device-width: 350px){
    .sign-btn {
        display: flex;
        justify-content: space-around;
        align-items: center;
    }

    .googleIcon {
        height: 35px;
        margin-right: 0;
    }
    
}


/* import React, { useContext, useState } from 'react';
import firebase from "firebase/app";
import "firebase/auth";
import firebaseConfig from './FirebaseConfig';
import { useHistory, useLocation } from 'react-router-dom';
import { UserContext } from '../../App';
import './Login.css';
import { ImGoogle } from "@react-icons/all-files/im/ImGoogle";
import { FaFacebookF } from "@react-icons/all-files/fa/FaFacebookF";
import { FiTwitter } from "@react-icons/all-files/fi/FiTwitter";
import { AiFillGithub } from "@react-icons/all-files/ai/AiFillGithub";

firebase.initializeApp(firebaseConfig);

const Login = () => {
    const [loggedInUser, setLoggedInUser] = useContext(UserContext);
    var provider = new firebase.auth.GoogleAuthProvider();
    const history = useHistory();
    const location = useLocation();
    const { from } = location.state || { from: { pathname: "/" } };

    const handleGoogleSignIn = () => {
        firebase.auth()
            .signInWithPopup(provider)
            .then((result) => {
                const { displayName, email } = result.user;
                const signedInUser = { name: displayName, email: email };
                setLoggedInUser(signedInUser);
                history.replace(from);
                sessionStorage.setItem.JSON.parse(('logEmail' , loggedInUser.email));
            }).catch((error) => {
                console.log('ERROR', error);
            });
    }
    return (
        <div className="full-container">
            <div className="half-container">
                <button
                    onClick={handleGoogleSignIn}>
                    <span className="mx-2">
                        <ImGoogle />
                    </span>GOOGLE SIGN IN
                 </button>
            </div>
        </div>
    );
};

export default Login; */

